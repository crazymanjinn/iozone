#!/usr/bin/env bash
set -euo pipefail

[[ -z "$TOP" ]] && TOP=$(git rev-parse --show-toplevel)

cd "$TOP"

pyfiles="$(mktemp --tmpdir= pyfiles.XXX)"
function finish {
	rm "$pyfiles"
}
trap finish EXIT

if git diff --cached --name-only --diff-filter=ACM -z |
	grep -z '\.py$' > "$pyfiles"; then
	xargs -tr0 -a "$pyfiles" reorder-python-imports \
		--separate-from-import --exit-zero-even-if-changed
	xargs -tr0 -a "$pyfiles" black
	xargs -tr0 -a "$pyfiles" git add
fi

if git diff --cached --name-only --diff-filter=ACM -z |
	grep -zq '^requirements.in$'; then
	pip-compile --upgrade --generate-hashes &&
	git add requirements.{txt,in}
fi
